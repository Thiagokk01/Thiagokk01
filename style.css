// Script principal do EcoTracker PRO
// Responsável pelo mapa, gráficos, filtros, modo claro/escuro

document.addEventListener('DOMContentLoaded', () => {
  // Variáveis globais
  let map, countryLayer;
  let currentCountry = null;

  // Dados simulados para 5 países
  const countriesData = {
    Brazil: {
      co2: [1500, 1400, 1300, 1200, 1100],
      trees: [5000, 5200, 5300, 5400, 5500],
      biodiversity: [2000, 2100, 2200, 2300, 2400],
    },
    USA: {
      co2: [5000, 4900, 4800, 4700, 4600],
      trees: [3000, 3100, 3200, 3300, 3400],
      biodiversity: [1500, 1400, 1300, 1200, 1100],
    },
    Canada: {
      co2: [1000, 980, 960, 940, 920],
      trees: [6000, 6100, 6200, 6300, 6400],
      biodiversity: [800, 850, 900, 950, 1000],
    },
    India: {
      co2: [2000, 1900, 1850, 1800, 1750],
      trees: [2500, 2600, 2700, 2800, 2900],
      biodiversity: [900, 920, 940, 960, 980],
    },
    Australia: {
      co2: [800, 780, 770, 760, 750],
      trees: [1500, 1520, 1530, 1540, 1550],
      biodiversity: [700, 710, 720, 730, 740],
    },
  };

  // Espécies ameaçadas simuladas
  const threatenedSpecies = [
    {
      name: 'Tigre-da-bengala',
      scientific: 'Panthera tigris tigris',
      status: 'Criticamente em perigo',
      region: 'Ásia',
      color: '#d9534f',
    },
    {
      name: 'Tartaruga-de-couro',
      scientific: 'Dermochelys coriacea',
      status: 'Vulnerável',
      region: 'Oceanos',
      color: '#f0ad4e',
    },
    {
      name: 'Arara-azul',
      scientific: 'Anodorhynchus hyacinthinus',
      status: 'Em perigo',
      region: 'América do Sul',
      color: '#d9534f',
    },
    {
      name: 'Panda Gigante',
      scientific: 'Ailuropoda melanoleuca',
      status: 'Vulnerável',
      region: 'China',
      color: '#f0ad4e',
    },
    {
      name: 'Rinoceronte-de-java',
      scientific: 'Rhinoceros sondaicus',
      status: 'Criticamente em perigo',
      region: 'Ásia',
      color: '#d9534f',
    },
  ];

  // Inicializar mapa
  function initMap() {
    map = L.map('map').setView([20, 0], 2);

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      maxZoom: 7,
      attribution:
        '&copy; <a href="https://openstreetmap.org/copyright">OpenStreetMap</a>',
    }).addTo(map);

    // GeoJSON países (simplificado)
    fetch('https://raw.githubusercontent.com/johan/world.geo.json/master/countries.geo.json')
      .then((res) => res.json())
      .then((geojson) => {
        countryLayer = L.geoJSON(geojson, {
          style: countryStyle,
          onEachFeature: onEachCountry,
        }).addTo(map);

        addLegend();
      });
  }

  // Estilo default para países
  function countryStyle(feature) {
    return {
      fillColor: '#117a65',
      weight: 1,
      opacity: 1,
      color: 'white',
      fillOpacity: 0.7,
    };
  }

  // Evento para cada país
  function onEachCountry(feature, layer) {
    layer.on({
      mouseover: highlightCountry,
      mouseout: resetHighlight,
      click: selectCountry,
    });
    layer.bindTooltip(feature.properties.name, {sticky: true});
  }

  // Highlight no país ao passar mouse
  function highlightCountry(e) {
    const layer = e.target;
    layer.setStyle({
      weight: 3,
      color: '#f39c12',
      fillOpacity: 0.9,
    });
    if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {
      layer.bringToFront();
    }
  }

  // Reset estilo do país
  function resetHighlight(e) {
    if (currentCountry !== e.target) {
      countryLayer.resetStyle(e.target);
    }
  }

  // Seleciona país e atualiza gráficos e lista
  function selectCountry(e) {
    if (currentCountry) {
      countryLayer.resetStyle(currentCountry);
    }
    currentCountry = e.target;
    currentCountry.setStyle({
      weight: 3,
      color: '#e74c3c',
      fillOpacity: 0.9,
    });

    const countryName = currentCountry.feature.properties.name;
    document.getElementById('country-name').textContent = countryName;

    updateCharts(countryName);
    updateSpeciesList(countryName);
  }

  // Atualiza gráficos conforme país
  let chartCo2, chartTrees, chartBiodiversity;

  function updateCharts(countryName) {
    const data = countriesData[countryName] || {
      co2: [0, 0, 0, 0, 0],
      trees: [0, 0, 0, 0, 0],
      biodiversity: [0, 0, 0, 0, 0],
    };
    const labels = ['2021', '2022', '2023', '2024', '2025'];

    const ctxCo2 = document.getElementById('chartCo2').getContext('2d');
    if (chartCo2) chartCo2.destroy();
    chartCo2 = new Chart(ctxCo2, {
      type: 'line',
      data: {
        labels,
        datasets: [
          {
            label: 'Emissão CO₂ (toneladas)',
            data: data.co2,
            borderColor: '#e74c3c',
            backgroundColor: 'rgba(231, 76, 60, 0.2)',
            fill: true,
            tension: 0.3,
          },
        ],
      },
      options: {
        responsive: true,
        plugins: {
          legend: {display: true},
          tooltip: {enabled: true},
        },
        scales: {
          y: {
            beginAtZero: true,
            ticks: {stepSize: 200},
          },
        },
      },
    });

    const ctxTrees = document.getElementById('chartTrees').getContext('2d');
    if (chartTrees) chartTrees.destroy();
    chartTrees = new Chart(ctxTrees, {
      type: 'bar',
      data: {
        labels,
        datasets: [
          {
            label: 'Número de Árvores',
            data: data.trees,
            backgroundColor: '#27ae60',
          },
        ],
      },
      options: {
        responsive: true,
        plugins: {legend: {display: true}},
        scales: {
          y: {beginAtZero: true},
        },
      },
    });

    const ctxBio = document.getElementById('chartBiodiversity').getContext('2d');
    if (chartBiodiversity) chartBiodiversity.destroy();
    chartBiodiversity = new Chart(ctxBio, {
      type: 'line',
      data: {
        labels,
        datasets: [
          {
            label: 'Índice de Biodiversidade',
            data: data.biodiversity,
            borderColor: '#2980b9',
            backgroundColor: 'rgba(41, 128, 185, 0.2)',
            fill: true,
            tension: 0.3,
          },
        ],
      },
      options: {
        responsive: true,
        plugins: {legend: {display: true}},
        scales: {
          y: {beginAtZero: true},
        },
      },
    });
  }

  // Atualiza lista de espécies filtrando pelo país/região (simplificado)
  function updateSpeciesList(countryName) {
    const listContainer = document.getElementById('species-list');
    listContainer.innerHTML = '';

    // Filtra espécies por região (exemplo simplificado)
    let filteredSpecies = threatenedSpecies.filter((sp) => {
      // Mapear alguns países para regiões, simples
      const regionMap = {
        Brazil: 'América do Sul',
        USA: 'América do Norte',
        Canada: 'América do Norte',
        India: 'Ásia',
        Australia: 'Oceania',
      };
      return sp.region === regionMap[countryName];
    });

    if (filteredSpecies.length === 0) {
      listContainer.innerHTML =
        '<p>Nenhuma espécie ameaçada listada para esta região.</p>';
      return;
    }

    filteredSpecies.forEach((sp) => {
      const item = document.createElement('div');
      item.className = 'species-item';
      item.innerHTML = `
        <div class="species-name">${sp.name}</div>
        <div class="species-scientific">${sp.scientific}</div>
        <div class="species-status" style="color: ${sp.color}">${sp.status}</div>
      `;
      listContainer.appendChild(item);
    });
  }

  // Cria legenda do mapa
  function addLegend() {
    const legend = document.getElementById('legend');
    legend.innerHTML = `
      <div><span style="background:#117a65"></span> Países</div>
      <div><span style="background:#f39c12"></span> Hover</div>
      <div><span style="background:#e74c3c"></span> Selecionado</div>
    `;
    legend.querySelectorAll('span').forEach((span) => {
      span.style.display = 'inline-block';
      span.style.width = '18px';
      span.style.height = '18px';
      span.style.marginRight = '6px';
      span.style.borderRadius = '4px';
    });
  }

  // Modo claro/escuro toggle
  const modeToggle = document.getElementById('mode-toggle');
  modeToggle.addEventListener('click', () => {
    document.body.classList.toggle('dark-mode');
    // Muda ícone
    if (document.body.classList.contains('dark-mode')) {
      modeToggle.innerHTML = '<i class="fas fa-sun"></i>';
    } else {
      modeToggle.innerHTML = '<i class="fas fa-moon"></i>';
    }
  });

  // Filtrar países e espécies com busca na sidebar
  const searchCountry = document.getElementById('search-country');
  const searchSpecies = document.getElementById('search-species');

  searchCountry.addEventListener('input', () => {
    const query = searchCountry.value.toLowerCase();
    countryLayer.eachLayer((layer) => {
      const name = layer.feature.properties.name.toLowerCase();
      if (name.includes(query)) {
        layer.setStyle({fillOpacity: 0.9});
        layer.addTo(map);
      } else {
        map.removeLayer(layer);
      }
    });
  });

  searchSpecies.addEventListener('input', () => {
    const query = searchSpecies.value.toLowerCase();
    const listContainer = document.getElementById('species-list');
    const items = listContainer.querySelectorAll('.species-item');
    items.forEach((item) => {
      const name = item.querySelector('.species-name').textContent.toLowerCase();
      if (name.includes(query)) {
        item.style.display = '';
      } else {
        item.style.display = 'none';
      }
    });
  });

  // Inicializa mapa e gráficos
  initMap();
});
